{"version":3,"file":"static/js/22.976cc530.chunk.js","mappings":"iLAIO,MAAMA,EAAuBA,CAACC,EAAeC,KAClD,MAAM,UAAEC,EAAS,aAAEC,GAAiBH,EAC9BI,EAAQ,GAsDd,GAnDIH,EAAOI,yBACTD,EAAME,KAAK,OACXF,EAAME,KAAK,UAADC,OAAWL,EAAUM,OAAS,6BACxCJ,EAAME,KAAK,SAADC,QAAU,IAAIE,MAAOC,cAAcC,MAAM,KAAK,KAGpDV,EAAOW,oBAAsBX,EAAOW,mBAAmBC,OAAS,GAClEZ,EAAOW,mBAAmBE,QAAQC,IAChC,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAGxB,GAAIE,EAAMC,SAAS,OAASD,EAAMC,SAAS,KAAM,CAC/C,MAAMC,EAASF,EAAMN,MAAM,KAAKS,IAAIC,GAAKA,EAAEC,QAC3ClB,EAAME,KAAK,GAADC,OAAIS,EAAI,MAClBG,EAAOL,QAAQO,IACbjB,EAAME,KAAK,OAADC,OAAQc,KAEtB,MAEEjB,EAAME,KAAK,GAADC,OAAIS,EAAI,MAAAT,OAAKU,MAMzBhB,EAAOsB,cAAgBtB,EAAOsB,aAAaV,OAAS,IACtDT,EAAME,KAAK,SACXL,EAAOsB,aAAaT,QAAQU,IAC1BpB,EAAME,KAAK,OAADC,OAAQiB,OAItBpB,EAAME,KAAK,OACXF,EAAME,KAAK,KAIbF,EAAME,KAAK,KAADC,OAAML,EAAUM,OAAS,6BACnCJ,EAAME,KAAK,8BAADC,OAAWL,EAAUuB,YAAc,eAAI,MACjDrB,EAAME,KAAK,8BAADC,QAAW,IAAIE,MAAOiB,eAAe,SAAQ,MAGnDzB,EAAO0B,kBACTvB,EAAME,KAAK,kGAGbF,EAAME,KAAK,IACXF,EAAME,KAAK,OACXF,EAAME,KAAK,KAGNH,GAAwC,IAAxBA,EAAaU,OAEhC,OADAT,EAAME,KAAK,4DACJF,EAAMwB,KAAK,MAIpB,IAAIC,EAAgB,EA2MpB,OA1MA1B,EAAaW,QAAQgB,IAAQ,IAADC,EAG1B,GAAI9B,EAAO0B,mBAAuC,QAAnBI,EAAC9B,EAAO+B,mBAAW,IAAAD,IAAlBA,EAAoBE,IAAIH,EAAII,QAC1D,OAGFL,IACA,MAAMM,EAASL,EAAIM,aACbC,EAAYP,EAAIO,UAChBC,EAAWR,EAAII,MAAQ,EAG7B,IAAIK,EAAe,GACfT,EAAIU,gBACND,EAAe,gBACNT,EAAIW,aAAe,IAC5BF,EAAY,UAAAhC,OAAQuB,EAAIW,eAG1BrC,EAAME,KAAK,MAADC,OAAO+B,EAAQ,MAAA/B,OAAK4B,GAAM5B,OAAGgC,IAGnCtC,EAAOyC,mBACTtC,EAAME,KAAK,IAADC,OAAK8B,EAAS,MAG1BjC,EAAME,KAAK,IAGPwB,EAAIa,eACNvC,EAAME,KAAKwB,EAAIa,cACfvC,EAAME,KAAK,KAITwB,EAAIc,UAAY3C,EAAO4C,kBACzBzC,EAAME,KAAK,aACXF,EAAME,KAAK,+CACXF,EAAME,KAAK,IACXF,EAAME,KAAK,OACXF,EAAME,KAAKwB,EAAIc,UACfxC,EAAME,KAAK,OACXF,EAAME,KAAK,cACXF,EAAME,KAAK,KAITwB,EAAIgB,WAAahB,EAAIgB,UAAUjC,OAAS,GAAKZ,EAAO8C,kBACtDjB,EAAIgB,UAAUhC,QAAQkC,IACpB,MAAMC,EAAaD,EAASE,IAAM,eAC5BC,EAAeH,EAASI,MAAQ,eAChCC,EAAgBL,EAASxC,OAAS,qBAExCJ,EAAME,KAAK,aACXF,EAAME,KAAK,sBAADC,OAAuB8C,EAAa,UAAA9C,OAAS0C,EAAU,gBACjE7C,EAAME,KAAK,IAGXF,EAAME,KAAK,sBAADC,OAAc4C,EAAY,MACpC/C,EAAME,KAAK,IAEX,MAAMgD,EAAUN,EAASM,SAAW,GACpC,GAAgB,WAAZA,EAAsB,CACxB,MAAMC,EAAUP,EAASO,SAAW,GAC9BC,EAAWR,EAASQ,UAAY,GAElCA,GACFpD,EAAME,KAAK,sBAADC,OAAciD,EAAQ,MAChCpD,EAAME,KAAK,IACXF,EAAME,KAAK,qBACXF,EAAME,KAAK,MAADC,OAAUiD,IACpBpD,EAAME,KAAKiD,GACXnD,EAAME,KAAK,SAEXF,EAAME,KAAK,qBACXF,EAAME,KAAK,OACXF,EAAME,KAAKiD,GACXnD,EAAME,KAAK,OAEf,MAAO,GAAgB,WAAZgD,GAAoC,YAAZA,EAAuB,CACxD,MAAMG,EAAST,EAASU,SAAW,GAC7BC,EAASX,EAASY,SAAW,GAEnCxD,EAAME,KAAK,sBAADC,OAAc+C,EAAO,MAC/BlD,EAAME,KAAK,IACXF,EAAME,KAAK,iCACXF,EAAME,KAAK,OACXF,EAAME,KAAKmD,GACXrD,EAAME,KAAK,OACXF,EAAME,KAAK,IACXF,EAAME,KAAK,2BACXF,EAAME,KAAK,OACXF,EAAME,KAAKqD,GACXvD,EAAME,KAAK,MACb,CAEAF,EAAME,KAAK,cACXF,EAAME,KAAK,MAKXwB,EAAI+B,OAAS/B,EAAI+B,MAAMhD,OAAS,GAAKZ,EAAO6D,cAC9ChC,EAAI+B,MAAM/C,QAAQiD,IAChB,MAAMC,EAAWD,EAAK/C,KAatB,GAXAZ,EAAME,KAAK,aACXF,EAAME,KAAK,0BAADC,OAAiByD,EAAQ,eACnC5D,EAAME,KAAK,IAGM,eAAb0D,GAA6BD,EAAKE,QACpC7D,EAAME,KAAK,kCAADC,OAAgBwD,EAAKE,MAAK,MACpC7D,EAAME,KAAK,KAITyD,EAAKG,OAA+B,kBAAfH,EAAKG,MAAoB,CAChD9D,EAAME,KAAK,iCACXF,EAAME,KAAK,WACX,IACEF,EAAME,KAAK6D,KAAKC,UAAUL,EAAKG,MAAO,KAAM,GAC9C,CAAE,MAAOG,GACPjE,EAAME,KAAKgE,OAAOP,EAAKG,OACzB,CACA9D,EAAME,KAAK,OACXF,EAAME,KAAK,GACb,CAGA,GAAIyD,EAAKQ,SACPnE,EAAME,KAAK,qBAEPyD,EAAKQ,OAAOC,WACdpE,EAAME,KAAK,uDACXF,EAAME,KAAK,KAII,eAAb0D,GAA2B,CAC7B,MAAMS,EAAgBV,EAAKQ,OAAOhB,SAAW,GACvCmB,EAAaC,KAAKC,IAAIH,EAAc5D,OAAQ,GAElD,GAAI4D,EAAc5D,OAAS,EAAG,CAC5BT,EAAME,KAAK,6BACXF,EAAME,KAAK,IAEX,IAAK,IAAIuE,EAAI,EAAGA,EAAIH,EAAYG,IAAK,CACnC,MAAMC,EAAOL,EAAcI,GAC3B,IAAKC,GAAwB,kBAATA,EAAmB,SAEvC,MAAMtE,EAAQsE,EAAKtE,OAAS,qBACtBuE,EAAMD,EAAKC,KAAO,IAExB3E,EAAME,KAAK,GAADC,OAAIsE,EAAI,EAAC,OAAAtE,OAAMC,EAAK,MAAAD,OAAKwE,EAAG,KACxC,CAEIN,EAAc5D,OAAS6D,GACzBtE,EAAME,KAAK,oBAADC,OAAWkE,EAAc5D,OAAS6D,EAAU,2CAGxDtE,EAAME,KAAK,GACb,CACF,CAGFF,EAAME,KAAK,cACXF,EAAME,KAAK,MAKXwB,EAAIkD,WAAalD,EAAIkD,UAAUnE,OAAS,GAAKZ,EAAOgF,mBACtD7E,EAAME,KAAK,aACXF,EAAME,KAAK,+CACXF,EAAME,KAAK,IAEXF,EAAME,KAAK,mCACXF,EAAME,KAAK,iBAEXwB,EAAIkD,UAAUlE,QAAQoE,IACpB,MAAM1E,EAAQ0E,EAAS1E,OAAS,2BAC1BuE,EAAMG,EAASH,KAAO,IACtBI,EAASJ,EAAI7D,SAAS,KAAO6D,EAAIpE,MAAM,KAAK,GAAK,2BACvDP,EAAME,KAAK,MAADC,OAAOC,EAAK,MAAAD,OAAKwE,EAAG,QAAAxE,OAAO4E,EAAM,SAG7C/E,EAAME,KAAK,cACXF,EAAME,KAAK,KAGbF,EAAME,KAAK,OACXF,EAAME,KAAK,MAITL,EAAO0B,mBACTvB,EAAME,KAAK,IACXF,EAAME,KAAK,uBAADC,OAASsB,EAAa,kDAG3BzB,EAAMwB,KAAK,OAIPwD,EAAeA,CAACC,EAAMC,KACjC,IACE,MAAMC,EAAO,IAAIC,KAAK,CAACH,GAAO,CAAEjC,KAAM,kBAChC2B,EAAMU,IAAIC,gBAAgBH,GAC1BI,EAAIC,SAASC,cAAc,KAOjC,OANAF,EAAEG,KAAOf,EACTY,EAAEI,SAAWT,EACbM,SAASI,KAAKC,YAAYN,GAC1BA,EAAEO,QACFN,SAASI,KAAKG,YAAYR,GAC1BF,IAAIW,gBAAgBrB,IACb,CACT,CAAE,MAAOV,GAGP,OAFAgC,QAAQhC,MAAM,wCAAWA,GACzBiC,MAAM,iEACC,CACT,E","sources":["utils/exportHelper.js"],"sourcesContent":["// utils/exportHelper.js\n// 导出相关功能\n\n// 导出为Markdown\nexport const exportChatAsMarkdown = (processedData, config) => {\n  const { meta_info, chat_history } = processedData;\n  const lines = [];\n\n  // 添加YAML前置元数据\n  if (config.exportObsidianMetadata) {\n    lines.push(\"---\");\n    lines.push(`title: ${meta_info.title || '对话记录'}`);\n    lines.push(`date: ${new Date().toISOString().split('T')[0]}`);\n\n    // 添加自定义属性\n    if (config.obsidianProperties && config.obsidianProperties.length > 0) {\n      config.obsidianProperties.forEach(prop => {\n        const { name, value } = prop;\n        \n        // 处理列表类型的值\n        if (value.includes(\",\") && !value.includes(\"[\")) {\n          const values = value.split(\",\").map(v => v.trim());\n          lines.push(`${name}:`);\n          values.forEach(v => {\n            lines.push(`  - ${v}`);\n          });\n        } else {\n          // 处理简单值\n          lines.push(`${name}: ${value}`);\n        }\n      });\n    }\n\n    // 添加标签\n    if (config.obsidianTags && config.obsidianTags.length > 0) {\n      lines.push(\"tags:\");\n      config.obsidianTags.forEach(tag => {\n        lines.push(`  - ${tag}`);\n      });\n    }\n\n    lines.push(\"---\");\n    lines.push(\"\");\n  }\n\n  // 添加标题和元信息\n  lines.push(`# ${meta_info.title || '对话记录'}`);\n  lines.push(`*创建时间: ${meta_info.created_at || '未知'}*`);\n  lines.push(`*导出时间: ${new Date().toLocaleString('zh-CN')}*`);\n  \n  // 如果是仅导出已完成的消息，添加说明\n  if (config.exportMarkedOnly) {\n    lines.push(`*导出类型: 仅包含已完成标记的消息*`);\n  }\n\n  lines.push(\"\");\n  lines.push(\"---\");\n  lines.push(\"\");\n\n  // 如果没有消息，添加提示\n  if (!chat_history || chat_history.length === 0) {\n    lines.push(\"*没有符合条件的消息*\");\n    return lines.join(\"\\n\");\n  }\n\n  // 添加消息内容\n  let exportedCount = 0;\n  chat_history.forEach(msg => {\n    // 如果设置为只导出已标记并且该消息未被标记，则跳过\n    // 注意：在App.js中已经进行了过滤，这里是双重保险\n    if (config.exportMarkedOnly && !config.markedItems?.has(msg.index)) {\n      return;\n    }\n\n    exportedCount++;\n    const sender = msg.sender_label;\n    const timestamp = msg.timestamp;\n    const msgIndex = msg.index + 1; // 序号从1开始\n\n    // 添加分支标记\n    let branchMarker = \"\";\n    if (msg.is_branch_point) {\n      branchMarker = \" 🔀\";\n    } else if (msg.branch_level > 0) {\n      branchMarker = ` ↳${msg.branch_level}`;\n    }\n\n    lines.push(`## ${msgIndex}. ${sender}${branchMarker}`);\n\n    // 根据配置决定是否显示时间戳\n    if (config.includeTimestamps) {\n      lines.push(`*${timestamp}*`);\n    }\n\n    lines.push(\"\");\n\n    // 添加正文内容\n    if (msg.display_text) {\n      lines.push(msg.display_text);\n      lines.push(\"\");\n    }\n\n    // 添加思考过程\n    if (msg.thinking && config.includeThinking) {\n      lines.push(\"<details>\");\n      lines.push(\"<summary>思考过程</summary>\");\n      lines.push(\"\");\n      lines.push(\"```\");\n      lines.push(msg.thinking);\n      lines.push(\"```\");\n      lines.push(\"</details>\");\n      lines.push(\"\");\n    }\n\n    // 添加artifacts内容\n    if (msg.artifacts && msg.artifacts.length > 0 && config.includeArtifacts) {\n      msg.artifacts.forEach(artifact => {\n        const artifactId = artifact.id || '未知';\n        const artifactType = artifact.type || '未知';\n        const artifactTitle = artifact.title || '无标题';\n\n        lines.push(\"<details>\");\n        lines.push(`<summary>Artifact: ${artifactTitle} (ID: ${artifactId})</summary>`);\n        lines.push(\"\");\n\n        // 显示类型\n        lines.push(`**类型**: \\`${artifactType}\\``);\n        lines.push(\"\");\n\n        const command = artifact.command || '';\n        if (command === 'create') {\n          const content = artifact.content || '';\n          const language = artifact.language || '';\n\n          if (language) {\n            lines.push(`**语言**: \\`${language}\\``);\n            lines.push(\"\");\n            lines.push(\"**内容**:\");\n            lines.push(`\\`\\`\\`${language}`);\n            lines.push(content);\n            lines.push(\"```\");\n          } else {\n            lines.push(\"**内容**:\");\n            lines.push(\"```\");\n            lines.push(content);\n            lines.push(\"```\");\n          }\n        } else if (command === 'update' || command === 'rewrite') {\n          const oldStr = artifact.old_str || '';\n          const newStr = artifact.new_str || '';\n\n          lines.push(`**操作**: \\`${command}\\``);\n          lines.push(\"\");\n          lines.push(\"**原始文本**:\");\n          lines.push(\"```\");\n          lines.push(oldStr);\n          lines.push(\"```\");\n          lines.push(\"\");\n          lines.push(\"**新文本**:\");\n          lines.push(\"```\");\n          lines.push(newStr);\n          lines.push(\"```\");\n        }\n\n        lines.push(\"</details>\");\n        lines.push(\"\");\n      });\n    }\n\n    // 添加工具使用记录\n    if (msg.tools && msg.tools.length > 0 && config.includeTools) {\n      msg.tools.forEach(tool => {\n        const toolName = tool.name;\n\n        lines.push(\"<details>\");\n        lines.push(`<summary>工具: ${toolName}</summary>`);\n        lines.push(\"\");\n\n        // 查询内容\n        if (toolName === \"web_search\" && tool.query) {\n          lines.push(`**搜索查询**: \\`${tool.query}\\``);\n          lines.push(\"\");\n        }\n\n        // 工具输入\n        if (tool.input && typeof tool.input === 'object') {\n          lines.push(\"**输入参数**:\");\n          lines.push(\"```json\");\n          try {\n            lines.push(JSON.stringify(tool.input, null, 2));\n          } catch (error) {\n            lines.push(String(tool.input));\n          }\n          lines.push(\"```\");\n          lines.push(\"\");\n        }\n\n        // 工具结果\n        if (tool.result) {\n          lines.push(\"**结果**:\");\n\n          if (tool.result.is_error) {\n            lines.push(\"> ⚠️ 工具执行出错\");\n            lines.push(\"\");\n          }\n\n          // Web搜索结果特殊处理\n          if (toolName === \"web_search\") {\n            const resultContent = tool.result.content || [];\n            const maxResults = Math.min(resultContent.length, 5); // 最多显示5个结果\n\n            if (resultContent.length > 0) {\n              lines.push(\"搜索结果:\");\n              lines.push(\"\");\n\n              for (let i = 0; i < maxResults; i++) {\n                const item = resultContent[i];\n                if (!item || typeof item !== 'object') continue;\n\n                const title = item.title || \"无标题\";\n                const url = item.url || \"#\";\n\n                lines.push(`${i + 1}. [${title}](${url})`);\n              }\n\n              if (resultContent.length > maxResults) {\n                lines.push(`*...还有 ${resultContent.length - maxResults} 个结果未显示*`);\n              }\n\n              lines.push(\"\");\n            }\n          }\n        }\n\n        lines.push(\"</details>\");\n        lines.push(\"\");\n      });\n    }\n\n    // 添加引用\n    if (msg.citations && msg.citations.length > 0 && config.includeCitations) {\n      lines.push(\"<details>\");\n      lines.push(\"<summary>引用来源</summary>\");\n      lines.push(\"\");\n\n      lines.push(\"| 标题 | 来源 |\");\n      lines.push(\"| --- | --- |\");\n\n      msg.citations.forEach(citation => {\n        const title = citation.title || \"未知来源\";\n        const url = citation.url || \"#\";\n        const source = url.includes('/') ? url.split('/')[2] : '未知网站';\n        lines.push(`| [${title}](${url}) | ${source} |`);\n      });\n\n      lines.push(\"</details>\");\n      lines.push(\"\");\n    }\n\n    lines.push(\"---\");\n    lines.push(\"\");\n  });\n\n  // 如果设置了仅导出已完成，在末尾添加统计信息\n  if (config.exportMarkedOnly) {\n    lines.push(\"\");\n    lines.push(`*共导出 ${exportedCount} 条已完成的消息*`);\n  }\n\n  return lines.join(\"\\n\");\n};\n\n// 保存文本到文件\nexport const saveTextFile = (text, fileName) => {\n  try {\n    const blob = new Blob([text], { type: 'text/markdown' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fileName;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    return true;\n  } catch (error) {\n    console.error('保存文件失败:', error);\n    alert('保存文件失败，请重试');\n    return false;\n  }\n};"],"names":["exportChatAsMarkdown","processedData","config","meta_info","chat_history","lines","exportObsidianMetadata","push","concat","title","Date","toISOString","split","obsidianProperties","length","forEach","prop","name","value","includes","values","map","v","trim","obsidianTags","tag","created_at","toLocaleString","exportMarkedOnly","join","exportedCount","msg","_config$markedItems","markedItems","has","index","sender","sender_label","timestamp","msgIndex","branchMarker","is_branch_point","branch_level","includeTimestamps","display_text","thinking","includeThinking","artifacts","includeArtifacts","artifact","artifactId","id","artifactType","type","artifactTitle","command","content","language","oldStr","old_str","newStr","new_str","tools","includeTools","tool","toolName","query","input","JSON","stringify","error","String","result","is_error","resultContent","maxResults","Math","min","i","item","url","citations","includeCitations","citation","source","saveTextFile","text","fileName","blob","Blob","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","console","alert"],"sourceRoot":""}